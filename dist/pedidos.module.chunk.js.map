{"version":3,"sources":["C:/Users/tomas/Documents/workspace-sts-3.9.1.RELEASE/delta-sport-angular-front/src/app/model/pedido/detallePedido.model.ts","C:/Users/tomas/Documents/workspace-sts-3.9.1.RELEASE/delta-sport-angular-front/src/app/model/pedido/medioPago.model.ts","C:/Users/tomas/Documents/workspace-sts-3.9.1.RELEASE/delta-sport-angular-front/src/app/model/producto/detalleTalla.model.ts","C:/Users/tomas/Documents/workspace-sts-3.9.1.RELEASE/delta-sport-angular-front/src/app/model/producto/rangoPrecioProducto.model.ts","C:/Users/tomas/Documents/workspace-sts-3.9.1.RELEASE/delta-sport-angular-front/src/app/pages/pedidos/form-pedido/filterdata.pipe.ts","C:/Users/tomas/Documents/workspace-sts-3.9.1.RELEASE/delta-sport-angular-front/src/app/pages/pedidos/form-pedido/form-pedido.component.html","C:/Users/tomas/Documents/workspace-sts-3.9.1.RELEASE/delta-sport-angular-front/src/app/pages/pedidos/form-pedido/form-pedido.component.ts","C:/Users/tomas/Documents/workspace-sts-3.9.1.RELEASE/delta-sport-angular-front/src/app/pages/pedidos/form-pedido/form-pedido.module.ts","C:/Users/tomas/Documents/workspace-sts-3.9.1.RELEASE/delta-sport-angular-front/src/app/pages/pedidos/pedidos.component.css","C:/Users/tomas/Documents/workspace-sts-3.9.1.RELEASE/delta-sport-angular-front/src/app/pages/pedidos/pedidos.component.html","C:/Users/tomas/Documents/workspace-sts-3.9.1.RELEASE/delta-sport-angular-front/src/app/pages/pedidos/pedidos.component.ts","C:/Users/tomas/Documents/workspace-sts-3.9.1.RELEASE/delta-sport-angular-front/src/app/pages/pedidos/pedidos.module.ts","C:/Users/tomas/Documents/workspace-sts-3.9.1.RELEASE/delta-sport-angular-front/src/app/pages/pedidos/pedidos.router.ts"],"names":[],"mappings":"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","file":"pedidos.module.chunk.js","sourcesContent":["import { FichaTecnica } from '../producto/fichaTecnica.model';\r\nimport { DetalleTalla } from '../producto/detalleTalla.model';\r\nimport { DetalleAdicional } from '../producto/detalleAdicional.model';\r\nexport class DetallePedido {\r\n  public id: number;\r\n  public idProducto: number;\r\n  public descProducto: string;\r\n  public idTipoProducto: number;\r\n  public descTipoProducto: string;\r\n  public idRangoPrecio: number;\r\n  public descRangoPrecio: string;\r\n  public cantidad: number = 1;\r\n  public valor: number;\r\n  public subTotal: number;\r\n  public llevaDiseno: number = 1; // 0 = no / 1 = si\r\n  public idColor: number; // solo si llevaDiseño = 0\r\n  public listaAdicionales: DetalleAdicional[];\r\n  public totalAdicionales: number = 0;\r\n  public listaDetalleTallas: DetalleTalla[];\r\n  public total: number = 0;\r\n  public tipoJugador: string;\r\n  //Ficha Tecnica\r\n  public fichaTecnica: FichaTecnica[];\r\n  constructor() {}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/tomas/Documents/workspace-sts-3.9.1.RELEASE/delta-sport-angular-front/src/app/model/pedido/detallePedido.model.ts","export class MedioPago {\r\n  public idMedioPago: number;\r\n  public fechaPago: Date;\r\n  public tipoPago: string;\r\n  public montoPago: number;\r\n  constructor() {}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/tomas/Documents/workspace-sts-3.9.1.RELEASE/delta-sport-angular-front/src/app/model/pedido/medioPago.model.ts","import { Comentario } from './../pedido/comentario.model';\r\nexport class DetalleTalla {\r\n  public numero: string;\r\n  public talla: string;\r\n  public generoPrenda: string; // Hombre / Mujer\r\n  public nombrePecho: string;\r\n  public nombreEspalda: string;\r\n  public terminadoCorte: number;\r\n  public terminadoDiseno: number;\r\n  public terminadoConfeccion: number;\r\n  public terminadoEstampado: number;\r\n  public listaComentarios: Comentario[]; //las notificaciones que agrega el operador\r\n\r\n  constructor() {}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/tomas/Documents/workspace-sts-3.9.1.RELEASE/delta-sport-angular-front/src/app/model/producto/detalleTalla.model.ts","export class RangoPrecioProducto {\r\n  public id: number;\r\n  public idTipoProducto: number;\r\n  public desc: string;\r\n  public valor: number;\r\n\r\n  constructor() {\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/tomas/Documents/workspace-sts-3.9.1.RELEASE/delta-sport-angular-front/src/app/model/producto/rangoPrecioProducto.model.ts","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({name: 'filterdata'})\r\nexport class FilterDataPipe implements PipeTransform {\r\n\r\n  transform(items: any[], searchText: string): any[] {\r\n    if (!items) {\r\n      return [];\r\n    }\r\n\r\n    if (!searchText) {\r\n      return items;\r\n    }\r\n    searchText = searchText.toLowerCase();\r\n    return items.filter(it => {\r\n      return it.toLowerCase().includes(searchText);\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/tomas/Documents/workspace-sts-3.9.1.RELEASE/delta-sport-angular-front/src/app/pages/pedidos/form-pedido/filterdata.pipe.ts","module.exports = \"  <div class=\\\"container\\\">\\r\\n\\r\\n<!--FORM TALLAS -->\\r\\n    <div *ngIf=\\\"tipoForm==='tallas'; else formPedido\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n          <app-card>\\r\\n            <h4>Detalle Tallas</h4>\\r\\n            <div class=\\\"d-inline-block\\\">\\r\\n              <div class=\\\"col-4 d-inline-block border\\\">\\r\\n                <p class=\\\"font-weight-bold\\\">Cliente</p>\\r\\n                <span *ngIf=\\\"pedido.cliente\\\">\\r\\n                  {{pedido.cliente.nombresCliente}} {{pedido.cliente.apellidoPaternoCliente}}\\r\\n                </span>\\r\\n              </div>\\r\\n              <div class=\\\"col-2 d-inline-block border\\\">\\r\\n                  <p class=\\\"font-weight-bold\\\">Fecha creación</p>\\r\\n                  <span>{{pedido.fechaCreacion | date:'yyyy-MM-dd'}}</span>\\r\\n              </div>\\r\\n              <div class=\\\"col-2 d-inline-block border\\\">\\r\\n                  <p class=\\\"font-weight-bold\\\">Fecha entrega</p>\\r\\n                  <span>{{pedido.fechaEntrega | date:'yyyy-MM-dd'}}</span>\\r\\n              </div>\\r\\n              <div class=\\\"col-2 d-inline-block border\\\">\\r\\n                  <p class=\\\"font-weight-bold\\\">Tipo de deporte</p>\\r\\n                  <span>{{pedido.tipoDeporte}}</span>\\r\\n              </div>\\r\\n            </div>\\r\\n          </app-card>\\r\\n          <app-card>\\r\\n            <div id=\\\"acordionProductos\\\">\\r\\n              <div class=\\\"card\\\" *ngFor='let c of pedido.listaProductos; let i=index'>\\r\\n                <!--header fila-->\\r\\n                <div id=\\\"header{{i}}\\\">\\r\\n                  <h4>{{c.descProducto}}<br>\\r\\n                    [{{c.descTipoProducto}}]\\r\\n                    / Tallas: [{{c.descRangoPrecio}}]\\r\\n                  </h4>\\r\\n                  Tipo jugador\\r\\n                  <h4>{{c.tipoJugador}}</h4>\\r\\n                </div>\\r\\n                <!--detalle fila-->\\r\\n                <div id=\\\"fila{{i}}\\\">\\r\\n                  <form #detallePedidoForm='ngForm' (ngSubmit)=\\\"onSubmitDetalle(detallePedido);\\\" class='form-inline'>\\r\\n                    <table class=\\\"form-table-bordered\\\">\\r\\n                      <thead>\\r\\n                        <tr>\\r\\n                          <td>#</td>\\r\\n                          <td>Talla</td>\\r\\n                          <td>Sexo prenda</td>\\r\\n                          <td>Numero jugador</td>\\r\\n                          <td>Nombre pecho</td>\\r\\n                          <td>Nombre espalda</td>\\r\\n                        </tr>\\r\\n                      </thead>\\r\\n                      <tbody>\\r\\n                        <tr *ngFor='let d of c.listaDetalleTallas; let ii=index'>\\r\\n                          <td>{{ ii+1 }}\\r\\n                          </td>\\r\\n        <!--TALLA-->\\r\\n                          <td style=\\\"width:90px;\\\">\\r\\n                            <select class='form-control' name='listaTallas' [(ngModel)]='d.talla'>\\r\\n                              <option [value]=''>[Seleccione...]</option>\\r\\n                              <option *ngFor='let talla of listaTallas' [value]='talla'>{{talla}}</option>\\r\\n                            </select>\\r\\n                          </td>\\r\\n        <!--SEXO PRENDA-->\\r\\n                          <td>\\r\\n                            <div class=\\\"btn-group btn-group-toggle\\\"\\r\\n                            ngbRadioGroup name='sexoPrenda' [(ngModel)]='d.generoPrenda'>\\r\\n\\r\\n                            <label ngbButtonLabel class=\\\"btn btn-outline-primary btn-sm\\\">\\r\\n                              <input ngbButton type=\\\"radio\\\" [value]='0'>Hombre\\r\\n                            </label>\\r\\n                            <label ngbButtonLabel class=\\\"btn btn-outline-primary btn-sm\\\">\\r\\n                              <input ngbButton type=\\\"radio\\\" [value]='1'>Mujer\\r\\n                            </label>\\r\\n                          </div>\\r\\n                        </td>\\r\\n        <!--NUMERO JUGADOR-->\\r\\n                          <td style=\\\"width:90px;\\\">\\r\\n                            <input type='number' class='form-control' name='numero{{ii}}'\\r\\n                             [(ngModel)]=\\\"d.numero\\\" placeholder='Numero jugador'>\\r\\n                          </td>\\r\\n        <!--NOMBRE PECHO-->\\r\\n                          <td style=\\\"width:140px;\\\">\\r\\n                            <input type='text' class='form-control' name='nombrePecho{{ii}}'\\r\\n                            [(ngModel)]=\\\"d.nombrePecho\\\" placeholder='Nombre pecho'>\\r\\n                          </td>\\r\\n        <!--NOMBRE ESPALDA-->\\r\\n                          <td style=\\\"width:140px;\\\">\\r\\n                            <input type='text' class='form-control' name='nombreEspalda{{ii}}'\\r\\n                            [(ngModel)]=\\\"d.nombreEspalda\\\" placeholder='Nombre espalda'>\\r\\n                            <br>\\r\\n                            {{d | json }}\\r\\n\\r\\n                          </td>\\r\\n                        </tr>\\r\\n                      </tbody>\\r\\n                    </table>\\r\\n                  </form>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </app-card>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n<!--FORM PEDIDO / ACTUALIZAR O CREAR -->\\r\\n    <ng-template #formPedido>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n          <app-card>\\r\\n            <h4>Datos de pedido<span *ngIf=\\\"pedido.numeroPedido\\\">[ Nro.{{pedido.numeroPedido}}]</span></h4>\\r\\n            <form #encabezadoPedidoForm='ngForm'>\\r\\n              <div class='form-group'><!--  border border-primary'> -->\\r\\n  <!-- SELECCICONA CLIENTE-->\\r\\n                <div class=\\\"col-7 d-inline-block\\\">\\r\\n                  <div class=\\\"d-inline-block\\\">\\r\\n                    Cliente\\r\\n                    <input *ngIf=\\\"!pedido.cliente\\\" type='text' size=\\\"45\\\" class='form-control' name='query' [(ngModel)]=\\\"queryBuscaCliente\\\"\\r\\n                    placeholder='Seleccione Cliente...'>\\r\\n\\r\\n                    <span *ngIf=\\\"pedido.cliente\\\">\\r\\n                      <input type='text' size=\\\"45\\\" class='form-control' name='query' [(ngModel)]=\\\"pedido.cliente.nombresCliente\\\">\\r\\n                    </span>\\r\\n                  </div>\\r\\n  <!--BOTON CARGAR CLIENTE-->\\r\\n                  <div class=\\\"d-inline-block\\\">\\r\\n                    <button *ngIf=\\\"!pedido.cliente\\\" type=\\\"button\\\" (click)=\\\"cargarCliente();\\\" class=\\\"btn btn-primary\\\">Cargar</button>\\r\\n                    <button *ngIf=\\\"pedido.cliente\\\" type=\\\"button\\\" (click)=\\\"cambiarCliente();\\\" class=\\\"btn btn-primary\\\">Cambiar</button>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n              <!--FECHA ENTREGA -->\\r\\n                <div class=\\\"col-2 d-inline-block\\\">\\r\\n                  Fecha de Entrega\\r\\n                  <input class='form-control' name='fechaEntrega'\\r\\n                  [ngModel]=\\\"pedido.fechaEntrega | date:'yyyy-MM-dd'\\\"\\r\\n                  (ngModelChange)=\\\"pedido.fechaEntrega = $event\\\"\\r\\n                  type=\\\"date\\\" placeholder=\\\"Fecha entrega\\\">\\r\\n                </div>\\r\\n\\r\\n              <!--TIPO DEPORTE -->\\r\\n                <div class=\\\"col-2 d-inline-block\\\">\\r\\n                  Tipo de deporte\\r\\n                  <select class='form-control' name='tipoDeporte' [(ngModel)]='pedido.tipoDeporte'>\\r\\n                    <option [value]=''>Seleccione...</option>\\r\\n                    <option *ngFor='let c of listaTipoDeporte' [value]='c'>{{c}}</option>\\r\\n                  </select>\\r\\n                </div>\\r\\n\\r\\n<!-- LISTADO BUSQUEDA CLIENTES-->\\r\\n                <div id=\\\"toggle\\\" onfocusout=\\\"\\\" class='list-group col-8'\\r\\n                  style='position:fixed; z-index:1000;' *ngIf='queryBuscaCliente'>\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\r\\n                    *ngFor='let c of listaClientes | dataFilter: queryBuscaCliente : \\\"nombresCliente\\\"'\\r\\n                    (click)='addCliente(c)'>{{c.rutCliente}} - {{c.nombresCliente}}\\r\\n                  </button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </form>\\r\\n          </app-card>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n  <!--SELECCIONA PRODUCTO-->\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n          <app-card>\\r\\n            <span class=\\\"btn-group\\\">\\r\\n              <h4><span>Seleccione Producto</span>\\r\\n                <div style=\\\"position:absolute;top:0px;left:230px;\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\"\\r\\n                  (click)=\\\"nuevoDetalle()\\\">Nuevo</button>\\r\\n                </div>\\r\\n              </h4>\\r\\n            </span>\\r\\n  <!-- Formulario detalle Pedido -->\\r\\n            <form #detallePedidoForm='ngForm' (ngSubmit)=\\\"onSubmitDetalle(detallePedido);\\\"\\r\\n              class='form-horizontal'>\\r\\n              <table class=\\\"form-table-bordered\\\">\\r\\n                <thead class=\\\"thead-light\\\">\\r\\n                  <tr>\\r\\n                    <td>Categoria</td>\\r\\n                    <td>Producto</td>\\r\\n                    <td>Talla</td>\\r\\n                    <td>Cantidad</td>\\r\\n                    <td>Valor</td>\\r\\n                    <td><b>SubTotal</b></td>\\r\\n                    <td>Tipo Jugador</td>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr>\\r\\n  <!--CATEGORIA-->\\r\\n                    <td class=\\\"col-xs-1\\\" style=\\\"width:140px;\\\">\\r\\n                      <select class='form-control' name='producto' [(ngModel)]='detallePedido.idProducto'\\r\\n                      (change)='onSelectProducto($event.target.value)'>\\r\\n                        <option [value]=''>[Producto]</option>\\r\\n                        <option *ngFor='let producto of listaProductos' [value]='producto.idProducto'>{{producto.desc}}</option>\\r\\n                      </select>\\r\\n                    </td>\\r\\n  <!--PRODUCTO-->\\r\\n                    <td style=\\\"width:140px;\\\">\\r\\n                      <select class='form-control' name='tipoProducto'\\r\\n                      [(ngModel)]='detallePedido.idTipoProducto'\\r\\n                      (change)='onSelectTipoProducto($event.target.value)'\\r\\n                      placeholder=\\\"[Tipo Producto]\\\">\\r\\n                        <option [value]=''>[Tipo Producto]</option>\\r\\n                        <option *ngFor='let tipoProducto of listaTipoProducto' [value]='tipoProducto.id'>{{tipoProducto.desc}}</option>\\r\\n                      </select>\\r\\n                    </td>\\r\\n  <!--RANGO PRECIO-->\\r\\n                    <td style=\\\"width:90px;\\\">\\r\\n                      <select class='form-control' name='rangoPrecio'\\r\\n                      [(ngModel)]='detallePedido.idRangoPrecio'\\r\\n                      (change)='onSelectRangoPrecio($event.target.value)'>\\r\\n                        <option [value]=''>[Talla]</option>\\r\\n                        <option *ngFor='let rangoPrecio of listaRangoPrecios' [value]='rangoPrecio.id'>{{rangoPrecio.desc}}</option>\\r\\n                      </select>\\r\\n                    </td>\\r\\n  <!--CANTIDAD-->\\r\\n                    <td style=\\\"width:90px;\\\">\\r\\n                      <input type='number' class='form-control' name='cantidad'\\r\\n                      [(ngModel)]='detallePedido.cantidad' placeholder='Cantidad' (input)='onChangeCalculaTotalDetalle()'>\\r\\n                    </td>\\r\\n  <!--VALOR-->\\r\\n                    <td style=\\\"width:100px;\\\">\\r\\n                      <input type='text' readonly class='form-control-plaintext form-control'\\r\\n                      name='valor' [ngModel]='detallePedido.valor'\\r\\n                        [ngModelOptions]='{standalone: true}'\\r\\n                        (change)=\\\"onChangeCalculaTotalDetalle()\\\">\\r\\n                    </td>\\r\\n  <!--SUBTOTAL-->\\r\\n                    <td style=\\\"width:100px;\\\">\\r\\n                      <input type='text' readonly class='form-control-plaintext form-control' name='subtotal'\\r\\n                      [ngModel]='detallePedido.subTotal' [ngModelOptions]='{standalone: true}'>\\r\\n                    </td>\\r\\n<!-- TIPO JUGADOR -->\\r\\n                    <td colspan=\\\"2\\\">\\r\\n                      <input type='text' class='form-control-plaintext form-control'\\r\\n                        name='valor' [(ngModel)]='detallePedido.tipoJugador'\\r\\n                        [ngModelOptions]='{standalone: true}'>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                  </tbody>\\r\\n                <tfoot>\\r\\n                  <tr>\\r\\n                    <td colspan=\\\"4\\\">\\r\\n                      <!--BOTONERA ITEM PRODUCTO-->\\r\\n                      <div *ngIf=\\\"editando; else nuevoItem\\\">\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Editar</button>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\r\\n                        (click)=\\\"nuevoDetalle()\\\">Cancelar</button>\\r\\n                      </div>\\r\\n                      <ng-template #nuevoItem>\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Añadir</button>\\r\\n                        <button type=\\\"reset\\\" class=\\\"btn btn-primary\\\">Limpiar</button>\\r\\n                      </ng-template>\\r\\n                      <button type=\\\"button\\\" (click)=\\\"isCollapsed = !isCollapsed\\\"\\r\\n                        [attr.aria-expanded]=\\\"!isCollapsed\\\"\\r\\n                        class=\\\"btn btn-outline-primary\\\"\\r\\n                        aria-control=\\\"detallesAdicionales\\\">Extras\\r\\n                      </button>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </tfoot>\\r\\n              </table>\\r\\n        <!-- {{detallePedido | json}} -->\\r\\n            </form>\\r\\n  <!--COLLAPSE DETALLES ADICIONALES-->\\r\\n            <div id=\\\"detallesAdicionales\\\" [ngbCollapse]=\\\"!isCollapsed\\\">\\r\\n              <span>\\r\\n                <h4><span>Detalles adicionales</span></h4>\\r\\n              </span>\\r\\n              <div class=\\\"container\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n    <!--LISTADO ADICIONALES-->\\r\\n                  <div class=\\\"col-sm-9 border\\\">\\r\\n                    <label for=\\\"checkAdicionales{{i}}\\\" class=\\\"badge badge-pill badge-success btn-sm\\\"\\r\\n                    *ngFor=\\\"let c of listaDetallesAdicionales;let i = index\\\"\\r\\n                      [style.background-color] = \\\"c.checked ? 'blue' : 'green'\\\">\\r\\n                      {{c.desc}}\\r\\n                      <span>${{c.valor}}</span>\\r\\n                        <input type=\\\"checkbox\\\" id=\\\"checkAdicionales{{i}}\\\" [(ngModel)]=\\\"c.checked\\\" data-toggle=\\\"toggle\\\"\\r\\n                        (change)=\\\"addDetalleAdicional()\\\">\\r\\n    <!--                   <ng-template #noChecked>\\r\\n                          <input ng-checked=\\\"false\\\" type=\\\"checkbox\\\" id=\\\"checkAdicionales{{i}}\\\" [(ngModel)]=\\\"c.checked\\\" data-toggle=\\\"toggle\\\"\\r\\n                          (change)=\\\"addDetalleAdicional()\\\">\\r\\n                      </ng-template>\\r\\n    -->                </label>\\r\\n                  </div>\\r\\n    <!--TOTAL ADICIONALES-->\\r\\n                  <div class=\\\"col-sm-3 border\\\">\\r\\n                    <span>Total Adicionales:</span>\\r\\n                    <div class=\\\"input-group\\\">\\r\\n                      <div class=\\\"input-group-prepend\\\">\\r\\n                        <span class=\\\"input-group-text\\\">$</span>\\r\\n                      </div>\\r\\n                      <input type='text' readonly class='form-control-plaintext form-control' name='totalAdicionales'\\r\\n                      [(ngModel)]='detallePedido.totalAdicionales'>\\r\\n                    </div>\\r\\n                    <!--BOTONERA ITEM PRODUCTO-->\\r\\n    <!--                 <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"addDetalleAdicional()\\\"\\r\\n                    >Añadir</button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Cancelar</button> -->\\r\\n                  </div>\\r\\n                </div>\\r\\n                <!-- {{listaDetallesAdicionales|json}} -->\\r\\n              </div>\\r\\n            </div>\\r\\n          </app-card>\\r\\n        </div>\\r\\n      </div>\\r\\n  <!--     {{ listaDetallesAdicionales | json }}\\r\\n  -->\\r\\n  <!--LISTA PRODUCTOS-->\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n          <app-card>\\r\\n            <h4 style=\\\"display:inline;\\\">Lista de productos&nbsp;\\r\\n                <span *ngIf=\\\"cantidadProductos\\\"\\r\\n                class=\\\"badge badge-danger\\\">{{cantidadProductos}}</span>\\r\\n            </h4>\\r\\n            <!-- <span style=\\\"display:inline;\\\" class=\\\"badge badge-success\\\">Eliminar todo</span> -->\\r\\n            <div class=\\\"container\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <table class=\\\"table table-bordered\\\">\\r\\n                  <thead>\\r\\n                    <tr>\\r\\n                      <th scope=\\\"col\\\" style=\\\"width:45%\\\">Descripción</th>\\r\\n                      <th scope=\\\"col\\\">Subtotal</th>\\r\\n                      <th scope=\\\"col\\\">Diseño</th>\\r\\n                      <th scope=\\\"col\\\">Total adicionales</th>\\r\\n                      <th scope=\\\"col\\\">Monto Total</th>\\r\\n                      <th>&nbsp;</th>\\r\\n                    </tr>\\r\\n                  </thead>\\r\\n                <tbody>\\r\\n                  <tr *ngFor='let c of pedido.listaProductos; let i=index'>\\r\\n  <!--DESCRIPCION-->\\r\\n                    <td class=\\\"fila\\\" style=\\\"padding:1px;\\\">\\r\\n                        <button type=\\\"button\\\" (click)=\\\"verProducto(c)\\\"\\r\\n                          class=\\\"btn btn-outline-success text-left\\\"\\r\\n                          aria-pressed=\\\"true\\\"\\r\\n                          style=\\\"width:100%;\\\">\\r\\n                              {{c.descProducto}}<br>\\r\\n                                [{{c.descTipoProducto}}]\\r\\n                              / Tallas: [{{c.descRangoPrecio}}]\\r\\n                        </button>\\r\\n                    </td>\\r\\n  <!--  GRUPO SUBTOTAL ITEM -->\\r\\n                    <td class=\\\"text-center\\\" style=\\\"padding:1px;width:15%\\\">\\r\\n                      <h1 class=\\\"badge badge-success\\\">${{c.valor}}</h1>\\r\\n                      x {{c.cantidad}}<br>\\r\\n                      <h3 >${{c.subTotal}}</h3>\\r\\n                    </td>\\r\\n                    <td class=\\\"text-center\\\" style=\\\"padding:1px;width:15%\\\">\\r\\n  <!--  GRUPO BOTONES DISEÑO -->\\r\\n                      <div class=\\\"btn-group btn-group-toggle\\\"\\r\\n                        ngbRadioGroup name='llevaDiseno' [(ngModel)]='c.llevaDiseno'>\\r\\n\\r\\n                        <label ngbButtonLabel class=\\\"btn btn-outline-primary btn-sm\\\">\\r\\n                          <input ngbButton type=\\\"radio\\\" [value]=\\\"0\\\">NO\\r\\n                        </label>\\r\\n                        <label ngbButtonLabel class=\\\"btn btn-outline-primary btn-sm\\\">\\r\\n                          <input ngbButton type=\\\"radio\\\" [value]=\\\"1\\\">SI\\r\\n                        </label>\\r\\n                      </div>\\r\\n  <!--  SELECT DISEÑO -->\\r\\n                      <select class='form-control' name='color' [(ngModel)]='c.idColor'\\r\\n                        *ngIf='c.llevaDiseno==0'>\\r\\n                        <option [value]=''>[Color]</option>\\r\\n                        <option *ngFor='let color of listaColores' [value]='color.id'>{{color.desc}}</option>\\r\\n                      </select>\\r\\n                    </td>\\r\\n  <!--TOTAL DETALLES ADICIONALES-->\\r\\n                    <td class=\\\"text-center\\\" style=\\\"padding:1px;width:15%\\\">\\r\\n                      <h3 >${{c.totalAdicionales}}</h3>\\r\\n                    </td>\\r\\n  <!--SUBTOTAL-->\\r\\n                    <td class=\\\"text-center\\\" style=\\\"padding:1px;width:15%\\\">\\r\\n                      <h3 >${{c.total}}</h3>\\r\\n                    </td>\\r\\n  <!--OPCION ELIMINAR-->\\r\\n                    <td>\\r\\n                        <div style=\\\"text-align:center\\\">\\r\\n                          <button type=\\\"button\\\" (click)='eliminaProducto(\\\"$index\\\");'>\\r\\n                            <i class=\\\"icofont icofont-trash\\\"></i>\\r\\n                          </button>\\r\\n                        </div>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n              </table>\\r\\n            </div>\\r\\n            </div>\\r\\n          </app-card>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-7\\\">\\r\\n  <!--COMENTARIOS-->\\r\\n          <app-card>\\r\\n            <span class=\\\"btn-group\\\">\\r\\n              <h4><span>Comentarios</span>\\r\\n                <div style=\\\"position:absolute;top:0px;right:30px;\\\">\\r\\n                  <a class=\\\"btn btn-primary btn-sm\\\" href=\\\"#\\\">Añadir</a>\\r\\n                </div>\\r\\n              </h4>\\r\\n            </span>\\r\\n            <div class=\\\"container\\\" *ngFor=\\\"let item of pedido.listaComentarios\\\">\\r\\n              <ul>\\r\\n                <li class=\\\"list-group-item table-bordered\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-3 text-right\\\">\\r\\n                      {{item.fechaCreacion}}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-8 text-right\\\">\\r\\n                      {{item.desc}}\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </li>\\r\\n              </ul>\\r\\n            </div>\\r\\n          </app-card>\\r\\n  <!--FORMAS DE PAGO-->\\r\\n          <app-card>\\r\\n            <span class=\\\"btn-group\\\">\\r\\n              <h4>\\r\\n                <span>Forma de pago</span>\\r\\n  <!-- BOTONERA FORMAS DE PAGO -->\\r\\n                <div style=\\\"position:absolute;top:0px;right:30px;\\\"\\r\\n                  [ngbCollapse]=\\\"botoneraFormaPagoisCollapsed\\\" >\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\"\\r\\n                    (click)=\\\"nuevoMedioPago();botoneraFormaPagoisCollapsed=!botoneraFormaPagoisCollapsed\\\" [attr.aria-expanded]=\\\"!botoneraFormaPagoisCollapsed\\\">\\r\\n                    Añadir\\r\\n                  </button>\\r\\n                </div>\\r\\n                <div style=\\\"position:absolute;top:0px;right:50px;\\\"\\r\\n                  [ngbCollapse]=\\\"!botoneraFormaPagoisCollapsed\\\" >\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\"\\r\\n                    (click)=\\\"addMedioPago();botoneraFormaPagoisCollapsed=!botoneraFormaPagoisCollapsed\\\"\\r\\n                    [attr.aria-expanded]=\\\"!botoneraFormaPagoisCollapsed\\\">\\r\\n                    Guardar\\r\\n                  </button>\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\"\\r\\n                    (click)=\\\"botoneraFormaPagoisCollapsed=!botoneraFormaPagoisCollapsed\\\"\\r\\n                    [attr.aria-expanded]=\\\"!botoneraFormaPagoisCollapsed\\\">\\r\\n                    Cancelar\\r\\n                  </button>\\r\\n                </div>\\r\\n\\r\\n              </h4>\\r\\n              <div [ngbCollapse]=\\\"!botoneraFormaPagoisCollapsed\\\">\\r\\n                <ul>\\r\\n                  <li class=\\\"list-group-item table-bordered\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"col-sm-5 text-right\\\">\\r\\n                        <h5>Ingrese monto</h5>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-sm-6 text-right\\\">\\r\\n                        <select class='form-control' name='tipoPago' [(ngModel)]='medioPago.tipoPago'>\\r\\n                          <option value='efectivo'>Efectivo</option>\\r\\n                          <option value='transferencia'>Transferencia</option>\\r\\n                          <option value='cheque'>Cheque</option>\\r\\n                        </select>\\r\\n                        <input type='number' class='form-control' name='montoPago' [(ngModel)]='medioPago.montoPago' placeholder='Monto Pagado'>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </li>\\r\\n                </ul>\\r\\n              </div>\\r\\n              <div class=\\\"container\\\">\\r\\n  <!--TITULO-->\\r\\n                <table width=\\\"100%\\\" class=\\\"table-bordered\\\">\\r\\n                  <tr *ngIf=\\\"pedido.listaMediosPago.length>0\\\">\\r\\n                      <th class=\\\"text-center\\\">Fecha Pago</th>\\r\\n                      <th class=\\\"text-center\\\">Medio Pago</th>\\r\\n                      <th class=\\\"text-center\\\">Monto</th>\\r\\n                      <th>&nbsp;</th>\\r\\n                  </tr>\\r\\n                  <!--LISTA DE MEDIOS DE PAGO-->\\r\\n                  <tr *ngFor=\\\"let item of pedido.listaMediosPago; let i = index;\\\">\\r\\n                    <td class=\\\"text-center\\\">\\r\\n                        <h5>{{item.fechaPago | date: 'dd/MM/yyyy' }}</h5>\\r\\n                    </td>\\r\\n                    <td class=\\\"text-left\\\">\\r\\n                      <h5>{{item.tipoPago}}</h5>\\r\\n                    </td>\\r\\n                    <td class=\\\"text-right\\\">\\r\\n                      <h4>${{item.montoPago}}</h4>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                      <div style=\\\"text-align:center\\\">\\r\\n                        <button type=\\\"button\\\" (click)='eliminaMedioPago(\\\"$i\\\");'>\\r\\n                          <i class=\\\"icofont icofont-trash\\\"></i>\\r\\n                        </button>\\r\\n                      </div>\\r\\n                    </td>\\r\\n\\r\\n                  </tr>\\r\\n                  <!--LISTA DE MEDIOS DE PAGO-->\\r\\n                  <tr>\\r\\n                    <td colspan=\\\"2\\\" class=\\\"text-right\\\">\\r\\n                      Saldo Pendiente:\\r\\n                    </td>\\r\\n                    <td class=\\\"text-right text-danger\\\">\\r\\n                      <h4>${{pedido.totalPagoPendiente}}</h4>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                  <!--LISTA DE MEDIOS DE PAGO-->\\r\\n                  <tr>\\r\\n                    <td colspan=\\\"2\\\" class=\\\"text-right\\\">\\r\\n                      Monto cancelado:\\r\\n                    </td>\\r\\n                    <td class=\\\"text-right\\\">\\r\\n                      <h4><b>${{pedido.totalMediosPago}}</b></h4>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </table>\\r\\n              </div>\\r\\n            </span>\\r\\n          </app-card>\\r\\n        </div>\\r\\n  <!--TOTALES PEDIDO-->\\r\\n        <div class=\\\"col-sm-5\\\">\\r\\n          <app-card>\\r\\n            <h4>Total Pedido</h4>\\r\\n            <div class=\\\"container\\\">\\r\\n              <ul class=\\\"list-group\\\">\\r\\n                <li class=\\\"list-group-item\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"text-right col-sm-5\\\">\\r\\n                      <h5>Subtotal</h5>\\r\\n                    </div>\\r\\n                    <div class=\\\"text-right col-sm-6\\\">\\r\\n                      <h4>${{pedido.subTotal}}</h4>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </li>\\r\\n                <li class=\\\"list-group-item\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"text-right col-sm-5\\\">\\r\\n                      <h5>Descuento %</h5>\\r\\n                    </div>\\r\\n                    <div class=\\\"text-right col-sm-6\\\">\\r\\n                      <h4>\\r\\n                        <input type='number' class='form-control' name='descuento' [(ngModel)]='pedido.descuento' placeholder='Descuento' (input)='onChangeCalculaTotal()'>\\r\\n                      </h4>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </li>\\r\\n                <li class=\\\"list-group-item\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"text-right col-sm-5\\\">\\r\\n                      <h5>Valor Neto</h5>\\r\\n                    </div>\\r\\n                    <div class=\\\"text-right col-sm-6\\\">\\r\\n                      <h4>${{pedido.subTotalNeto}}</h4>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </li>\\r\\n                <li class=\\\"list-group-item\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"text-right col-sm-5\\\">\\r\\n                      <h5>Iva 19%</h5>\\r\\n                    </div>\\r\\n                    <div class=\\\"text-right col-sm-6\\\">\\r\\n                      <h4>${{pedido.iva}}</h4>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </li>\\r\\n                <li class=\\\"list-group-item\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"text-right col-sm-5\\\">\\r\\n                      <h5><b>Monto Total</b></h5>\\r\\n                    </div>\\r\\n                    <div class=\\\"text-right col-sm-6\\\">\\r\\n                      <h4><b>${{pedido.total}}</b></h4>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </li>\\r\\n              </ul>\\r\\n            </div>\\r\\n          </app-card>\\r\\n        </div>\\r\\n      </div>\\r\\n    </ng-template>\\r\\n  </div>\\r\\n  <div class='form-group'>\\r\\n    <a class=\\\"btn btn-primary\\\" routerLink='/pedidos'>Cancelar</a>\\r\\n    <button (click)='guardarPedido();' class='btn btn-primary'>{{nombreBoton}}</button>\\r\\n  </div>\\r\\n{{pedido|json}}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/tomas/Documents/workspace-sts-3.9.1.RELEASE/delta-sport-angular-front/src/app/pages/pedidos/form-pedido/form-pedido.component.html\n// module id = ../../../../../src/app/pages/pedidos/form-pedido/form-pedido.component.html\n// module chunks = pedidos.module","import { DetalleTalla } from '../../../model/producto/detalleTalla.model';\r\nimport { DetallePedido } from '../../../model/pedido/detallePedido.model';\r\nimport { DetalleAdicional } from '../../../model/producto/detalleAdicional.model';\r\nimport { MedioPago } from '../../../model/pedido/medioPago.model';\r\nimport { Observable } from 'rxjs';\r\nimport { Cliente } from '../../../model/cliente/cliente.model';\r\nimport { Color } from '../../../model/producto/color.model';\r\nimport { TipoProducto } from '../../../model/producto/tipoProducto.model';\r\nimport { RangoPrecioProducto } from '../../../model/producto/rangoPrecioProducto.model';\r\nimport { Pedido } from '../../../model/pedido/pedido.model';\r\n\r\nimport { ClientesService } from '../../../services/clientes.service';\r\nimport { PedidosService } from '../../../services/pedidos.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport {FormControl} from '@angular/forms';\r\nimport { ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { Router } from '@angular/router';\r\n\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  Input,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport { Producto } from '../../../model/producto/producto.model';\r\nimport { Comentario } from '../../../model/pedido/comentario.model';\r\n\r\n@Component({\r\n  selector: 'app-form-pedido',\r\n  templateUrl: './form-pedido.component.html'\r\n})\r\n\r\nexport class FormPedidoComponent implements OnInit {\r\n /*  @ViewChild('encabezadoPedidoForm') encabezadoPedidoForm: NgForm;\r\n  @ViewChild('detallePedidoForm') detallePedidoForm: NgForm;\r\n  */\r\n/*   @Input() verForm: boolean;\r\n  @Input() tipoForm: string;\r\n  @Input() pedido: Pedido; //Puede venir con datos\r\n  @Output() public salir = new EventEmitter(); */\r\n  pedido: Pedido;\r\n  cliente: Cliente;\r\n  tipoForm: string;\r\n\r\n  //Lista Detalle pedido\r\n  detallePedido: DetallePedido;\r\n  detalleTallas: DetalleTalla;\r\n  medioPago: MedioPago;\r\n  nombreBoton: string=\"Guardar\";\r\n  //listaDetallePedido: DetallePedido[] = new Array();\r\n  rangoPrecioProducto: RangoPrecioProducto;\r\n\r\n  //Listas\r\n  listaProductos: Producto[];\r\n  listaTipoProducto: TipoProducto[];\r\n  listaRangoPrecios: RangoPrecioProducto[];\r\n  listaColores: Color[];\r\n  listaClientes: Cliente[];\r\n  listaDetallesAdicionales: any[] = new Array();\r\n  listaDetallesTallas: any[] = new Array();\r\n  listaTipoDeporte: any[] = new Array();\r\n  listaTallas: any[] = new Array();\r\n\r\n  cantidadProductos: number;\r\n  cantidadComentarios: number;\r\n  queryBuscaCliente: string; //input text search del Cliente\r\n\r\n  //Medio pago\r\n  listaMediosPago: any[] = new Array();\r\n\r\n  //saldoPendiente: number;\r\n  editando: boolean = false;\r\n  id: any;\r\n\r\n  constructor(private route: ActivatedRoute,\r\n    private router: Router,\r\n    private pedidosService: PedidosService,\r\n    private clientesService: ClientesService) {}\r\n\r\n  ngOnInit() {\r\n    this.tipoForm = this.route.snapshot.params['tipoForm'];\r\n    console.log('Se inicia form pedido->' + this.tipoForm);\r\n\r\n    //TALLAS\r\n    if (this.tipoForm === 'tallas') {\r\n      this.listaTallas = this.pedidosService.getTallas();\r\n\r\n      this.pedidosService.getPedido(this.route.snapshot.params['id']).subscribe(data => {\r\n        console.log('Editando tallas->' + JSON.stringify(data));\r\n        this.pedido = data;\r\n      });\r\n      this.nombreBoton = 'Actualizar';\r\n\r\n    }else if (this.tipoForm === 'editar') {\r\n    //EDITAR\r\n      this.pedidosService.getPedido(this.route.snapshot.params['id']).subscribe(data => {\r\n        console.log('Editando pedido->' + JSON.stringify(data));\r\n        this.pedido = data;\r\n      });\r\n      this.nombreBoton = 'Actualizar';\r\n\r\n    //NUEVO\r\n    }\r\n    if (this.pedido == null) {\r\n      console.log('nuevo pedido');\r\n      this.pedido = new Pedido();\r\n      this.pedido.idEstado = 1; //0= inactivo , 1=activo\r\n      this.pedido.fechaCreacion = new Date();\r\n      this.pedido.subTotal = 0;\r\n      this.pedido.descuento = 0;\r\n      this.pedido.listaProductos = new Array();\r\n      this.pedido.listaMediosPago = new Array();\r\n    }\r\n\r\n    this.listaColores = this.pedidosService.getColores();\r\n    this.listaMediosPago = this.pedidosService.getMediosPago();\r\n    this.listaDetallesAdicionales = this.pedidosService.getDetallesAdicionales();\r\n    this.listaTipoDeporte = this.pedidosService.getTipoDeporte();\r\n\r\n    //lista de pedidos\r\n    this.clientesService.getClientes().subscribe(data => {\r\n      console.log('obteniendo lista clientes...');\r\n      console.log(data);\r\n      this.listaClientes = data;\r\n    });\r\n\r\n    this.listaProductos = this.pedidosService.getProductos();\r\n\r\n    this.detallePedido = new DetallePedido();\r\n    this.medioPago = new MedioPago();\r\n    this.detallePedido.listaAdicionales = new Array();\r\n    this.detallePedido.listaDetalleTallas = new Array();\r\n    this.rangoPrecioProducto = new RangoPrecioProducto();\r\n  }\r\n\r\n  getListaCliente(cadena:string) {\r\n    /* = this.clientesService.getClientes()\r\n    .filter(item => item.idProducto == productoId);\r\n    console.log('productoId-> ' + productoId); */\r\n    //console.log('tipos de producto->' + JSON.stringify(this.listaTipoProducto));\r\n    //https://codeburst.io/create-a-search-pipe-to-dynamically-filter-results-with-angular-4-21fd3a5bec5c\r\n  }\r\n\r\n  onSelectProducto(productoId: number) {\r\n    //this.detallePedido.idProducto = productoId;\r\n    this.listaTipoProducto = this.pedidosService.getTipoProductos()\r\n      .filter(item => item.idProducto == productoId);\r\n    console.log('productoId-> ' + productoId);\r\n    //console.log('tipos de producto->' + JSON.stringify(this.listaTipoProducto));\r\n  }\r\n\r\n  onSelectTipoProducto(tipoProductoId: number) {\r\n    //this.detallePedido.idTipoProducto = tipoProductoId;\r\n    this.listaRangoPrecios = this.pedidosService.getRangoPrecios()\r\n      .filter(item => item.idTipoProducto == tipoProductoId);\r\n      console.log('onSelectTipoProducto tipoProductoId->' + tipoProductoId);\r\n    }\r\n\r\n  onSelectRangoPrecio(rangoPrecioId: number) {\r\n    this.rangoPrecioProducto = this.listaRangoPrecios.find(item => item.id == rangoPrecioId);\r\n    //this.detallePedido.idRangoPrecio = this.rangoPrecioProducto.id;\r\n    this.detallePedido.valor  = this.rangoPrecioProducto.valor;\r\n    this.onChangeCalculaTotalDetalle();\r\n    console.log('onSelectRangoPrecio rangoPrecioId->' + rangoPrecioId);\r\n  }\r\n\r\n/*   onSelectSinDiseno(llevaDiseño: number){\r\n      console.log('llevaDiseño->'+llevaDiseño);\r\n  } */\r\n\r\n  emiteVolver() {\r\n    //this.pedidoForm.reset();\r\n    //this.salir.emit();\r\n    //this.router.navigate(['/pedidos', 'Pedido creado']);\r\n\r\n  }\r\n\r\n\r\n  onSubmitDetalle() {\r\n    if (this.editando){\r\n      this.detallePedido.listaAdicionales = this.listaDetallesAdicionales.filter(item => item.checked);\r\n      this.addTallasProducto();\r\n\r\n    }else if (this.tipoForm == 'tallas'){\r\n\r\n    }else if (this.tipoForm == 'nuevo'){\r\n      //this.pedido.rutCliente = this.pedidoForm.value.rutCliente;\r\n\r\n      //setea Correlativo nro item\r\n      this.detallePedido.id = this.pedido.listaProductos.length + 1;\r\n\r\n      // SETEA NOMBRE DE CATEGORIA/PRODUCTO/RANGO PRECIO\r\n      const producto: Producto = this.listaProductos.find(item => item.idProducto == this.detallePedido.idProducto);\r\n      this.detallePedido.descProducto = producto.desc;\r\n      this.detallePedido.descTipoProducto = this.listaTipoProducto.find(item => item.id == this.detallePedido.idTipoProducto).desc;\r\n      this.detallePedido.descRangoPrecio = this.listaRangoPrecios.find(item => item.id == this.detallePedido.idRangoPrecio).desc;\r\n      this.detallePedido.listaAdicionales = this.listaDetallesAdicionales.filter(item => item.checked);\r\n\r\n      this.addTallasProducto();\r\n      this.cantidadProductos = this.pedido.listaProductos.push(this.detallePedido);\r\n\r\n      console.log(\"nuevo item->\"+ JSON.stringify(this.detallePedido));\r\n      this.detallePedido = new DetallePedido();\r\n    }\r\n    //Calcula el total\r\n    this.onChangeCalculaTotal();\r\n\r\n   //this.pedido.listaProductos = this.listaDetallePedido;\r\n    this.detallePedido = new DetallePedido();\r\n    this.listaDetallesAdicionales = this.pedidosService.getDetallesAdicionales();\r\n  }\r\n\r\n  addTallasProducto(){\r\n      //TALLAS\r\n      this.listaDetallesTallas = new Array();\r\n      for (let c = 0; c < this.detallePedido.cantidad; c++) {\r\n        this.detalleTallas = new DetalleTalla();\r\n        this.detalleTallas.numero = '';\r\n        this.detalleTallas.nombrePecho = '';\r\n        this.detalleTallas.nombreEspalda = '';\r\n        this.detalleTallas.terminadoConfeccion = 0;\r\n        this.detalleTallas.terminadoCorte = 0;\r\n        this.detalleTallas.terminadoEstampado = 0;\r\n        this.detalleTallas.terminadoDiseno = 0;\r\n        this.detalleTallas.generoPrenda ='';\r\n\r\n        this.listaDetallesTallas.push(this.detalleTallas);\r\n      }\r\n      this.detallePedido.listaDetalleTallas = this.listaDetallesTallas;\r\n  }\r\n\r\n  nuevoDetalle(){\r\n    this.detallePedido = new DetallePedido();\r\n    this.listaDetallesAdicionales = this.pedidosService.getDetallesAdicionales();\r\n    this.editando = false;\r\n  }\r\n\r\n  verProducto(detallePedido: DetallePedido) {\r\n    this.editando = true;\r\n    const detalle: DetallePedido = detallePedido;\r\n    this.detallePedido = detalle;\r\n    this.onSelectTipoProducto(this.detallePedido.idTipoProducto);\r\n    this.onSelectRangoPrecio(this.detallePedido.idRangoPrecio);\r\n\r\n    //this.listaDetallesAdicionales = detallePedido.listaAdicionales;\r\n    for (let c of this.listaDetallesAdicionales) {\r\n      c.checked = false;\r\n      for (let d of this.detallePedido.listaAdicionales) {\r\n        if (c.id == d.id){\r\n          c.checked = true;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log('detallePedido->' + JSON.stringify(detallePedido));\r\n  }\r\n\r\n  // CALCULA EL TOTAL DEL ITEM CUANDO CAMBIA LA CANTIDAD O EL VALOR\r\n  onChangeCalculaTotalDetalle() {\r\n    this.detallePedido.subTotal = (this.detallePedido.cantidad * this.detallePedido.valor);\r\n    this.detallePedido.total = this.detallePedido.subTotal + this.detallePedido.totalAdicionales;\r\n    console.log('total detalle->'+this.detallePedido.total);\r\n  }\r\n\r\n  // CUANDO CAMBIA EL DESCUENTO DEL PEDIDO\r\n  onChangeCalculaTotal() {\r\n    console.log('Calculando total...');\r\n    //suma valor del detalle al pedido\r\n    let totalPedido:number = 0;\r\n    console.log('this.pedido.listaProductos: ', this.pedido.listaProductos);\r\n    this.pedido.listaProductos.filter(item => {\r\n      totalPedido += item.total;\r\n      console.log('total item->' + item.total + ' / total pedido->' + totalPedido);\r\n    } );\r\n    this.pedido.subTotal = totalPedido;\r\n\r\n    this.pedido.subTotalNeto = Math.round(this.pedido.subTotal - (this.pedido.subTotal * this.pedido.descuento)\r\n     / 100);\r\n    this.pedido.iva = Math.round(this.pedido.subTotalNeto * 0.19);\r\n    this.pedido.total = Math.round(this.pedido.subTotalNeto + this.pedido.iva);\r\n\r\n    this.pedido.totalMediosPago=0;\r\n    for (let c of this.pedido.listaMediosPago) {\r\n      this.pedido.totalMediosPago += c.montoPago;\r\n    }\r\n    console.log('this.pedido.totalMediosPago->' + this.pedido.totalMediosPago);\r\n    this.pedido.totalPagoPendiente = this.pedido.total - this.pedido.totalMediosPago;\r\n  }\r\n\r\n  // CUANDO AGREGO UN DETALLE ADICIONAL\r\n  addDetalleAdicional(){\r\n    let totalAdicionales:number = 0;\r\n    this.detallePedido.listaAdicionales = this.listaDetallesAdicionales.filter(item => {\r\n      if (item.checked){\r\n        totalAdicionales += item.valor;\r\n        //console.log('item->'+ JSON.stringify(item));\r\n      }\r\n    } );\r\n    this.detallePedido.totalAdicionales = totalAdicionales;\r\n    this.onChangeCalculaTotalDetalle();\r\n    //console.log('this.detallePedido.totalAdicionales-> ' + this.detallePedido.totalAdicionales);\r\n  }\r\n\r\n  nuevoMedioPago() {\r\n    this.medioPago = new MedioPago();\r\n    this.medioPago.fechaPago = new Date();\r\n  }\r\n  addMedioPago() {\r\n    console.log('agregando medio pago');\r\n    this.pedido.listaMediosPago.push(this.medioPago);\r\n    this.pedido.totalMediosPago = 0;\r\n    this.onChangeCalculaTotal();\r\n  }\r\n\r\n  guardarPedido(){\r\n    if (this.tipoForm === 'editar' || this.tipoForm === 'tallas') {\r\n\r\n      //SE DEFINE ESTE ESTADO CUANDO SE INGRESAN LAS TALLAS\r\n      if (this.tipoForm === 'tallas'){\r\n        this.pedido.idEstado=3;\r\n      }\r\n      this.pedidosService.putPedido(this.pedido).subscribe(data => {\r\n        console.log('pedido actualizado->' + JSON.stringify(data));\r\n        this.pedido = data;\r\n      });\r\n      this.router.navigate(['/pedidos', '<strong>Pedido nro. ['+ this.pedido.numeroPedido + ']</strong> Actualizado exitosamente']);\r\n\r\n    }else if (this.tipoForm === 'nuevo') {\r\n      //Contador de pedidos\r\n      this.pedidosService.countPedidos().subscribe(countPedidos => {\r\n        this.pedido.numeroPedido = countPedidos + 1;\r\n        console.log('this.pedido.numeroPedido->' +  this.pedido.numeroPedido);\r\n\r\n        console.log('insertando pedido...');\r\n        this.pedidosService.addPedido(this.pedido).subscribe(pedido => {\r\n          this.pedido = pedido;\r\n          console.log('nuevo  insertado->' + JSON.stringify(this.pedido));\r\n          this.router.navigate(['/pedidos', 'Pedido nro. ['+ this.pedido.numeroPedido + '] Creado exitosamente']);\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  eliminaProducto(id: number){\r\n    this.pedido.listaProductos.splice(id, 1);\r\n    this.cantidadProductos=this.pedido.listaProductos.length;\r\n    this.onChangeCalculaTotal();\r\n    console.log('eliminando producto->' + id);\r\n  }\r\n\r\n  eliminaMedioPago(id: number){\r\n    this.pedido.listaMediosPago.splice(id, 1);\r\n    this.onChangeCalculaTotal();\r\n    console.log('eliminando medio pago->' + id);\r\n  }\r\n\r\n  addCliente(cliente: Cliente) {\r\n    this.cliente = cliente;\r\n    this.queryBuscaCliente = cliente.rutCliente + ' - ' + cliente.nombresCliente + ' ' + cliente.apellidoPaternoCliente;\r\n  }\r\n\r\n  cargarCliente(){\r\n    this.pedido.cliente = this.cliente;\r\n  }\r\n\r\n  cambiarCliente(){\r\n    this.pedido.cliente = null;\r\n    this.queryBuscaCliente = '';\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/tomas/Documents/workspace-sts-3.9.1.RELEASE/delta-sport-angular-front/src/app/pages/pedidos/form-pedido/form-pedido.component.ts","import { PedidosComponent } from '../pedidos.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormPedidoComponent } from './form-pedido.component';\r\nimport { HttpModule } from '@angular/http';\r\nimport { PedidosService } from '../../../services/pedidos.service';\r\nimport { ClientesService } from '../../../services/clientes.service';\r\nimport { FilterDataPipe } from './filterdata.pipe';\r\n\r\nexport const pedidosRoutes: Routes = [\r\n  {path: ':id', component: PedidosComponent},\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpModule,\r\n    RouterModule.forChild(pedidosRoutes)\r\n  ],\r\n  providers: [\r\n    PedidosService,\r\n    ClientesService\r\n  ],\r\n  declarations: [\r\n    FilterDataPipe\r\n  ]\r\n})\r\nexport class FormPedidoModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/tomas/Documents/workspace-sts-3.9.1.RELEASE/delta-sport-angular-front/src/app/pages/pedidos/form-pedido/form-pedido.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/tomas/Documents/workspace-sts-3.9.1.RELEASE/delta-sport-angular-front/src/app/pages/pedidos/pedidos.component.css\n// module id = ../../../../../src/app/pages/pedidos/pedidos.component.css\n// module chunks = pedidos.module","module.exports = \"<div *ngIf=\\\"mensaje\\\" class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\r\\n  <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  </button>\\r\\n  {{mensaje}}\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\" *ngIf='verLista'>\\r\\n  <div class=\\\"col-sm-12\\\">\\r\\n    <!-- <app-card> -->\\r\\n      <!-- <a class=\\\"btn btn-primary\\\" (click)=\\\"nuevoPedido()\\\" routerLinkActive=\\\"active\\\">Nuevo Pedido</a> -->\\r\\n      <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/pedidos/formPedido', 'nuevo']\\\">NUEVO</a>\\r\\n    <!-- </app-card> -->\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Formulario  -->\\r\\n<!-- <div class=\\\"container\\\">\\r\\n  <app-form-pedido\\r\\n  [verForm]=\\\"!verLista\\\"\\r\\n  [tipoForm]=\\\"tipoForm\\\"\\r\\n  [pedido]=\\\"pedido\\\"\\r\\n  (salir)=\\\"volver($event)\\\"></app-form-pedido>\\r\\n</div> -->\\r\\n\\r\\n<!-- Lista  -->\\r\\n<div class=\\\"row\\\" *ngIf='verLista'>\\r\\n  <div class=\\\"col-sm-12\\\">\\r\\n    <app-card>\\r\\n      <h4>Filtros de busqueda</h4>\\r\\n      <form #encabezadoPedidoForm='ngForm' class='form-inline'>\\r\\n        <div class='form-group form-inline'>\\r\\n          Cliente\\r\\n          <input type='text' size=\\\"40\\\" class='form-control' name='queryClientes'>\\r\\n          Estado\\r\\n          <select class='form-control' name='queryEstado'>\\r\\n            <option [value]=''>[Producto]</option>\\r\\n            <option *ngFor='let c of listaEstadosPedido' [value]='c.id'>{{c.desc}}</option>\\r\\n          </select>\\r\\n          Fecha creación\\r\\n          <input class='form-control' name='fechaDesde' type=\\\"date\\\" placeholder=\\\"Fecha desde\\\">\\r\\n          <button type=\\\"reset\\\" class=\\\"btn btn-primary\\\">Quitar Filtro</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </app-card>\\r\\n\\r\\n    <app-card [title]=\\\"'Pedidos'\\\" [classHeader]=\\\"false\\\" [blockClass]=\\\"'table-border-style'\\\">\\r\\n      <div class=\\\"table-responsive\\\">\\r\\n        <table class=\\\"table table-hover\\\">\\r\\n          <thead>\\r\\n          <tr>\\r\\n            <th>#</th>\\r\\n            <th>Nombre Cliente</th>\\r\\n            <th>Fecha pedido</th>\\r\\n            <th>Fecha Entrega</th>\\r\\n            <th>Monto Total</th>\\r\\n            <th>Estado</th>\\r\\n            <th>Opciones</th>\\r\\n          </tr>\\r\\n          </thead>\\r\\n          <tbody *ngFor=\\\"let pedido of listaPedidos;let i = index\\\">\\r\\n            <tr>\\r\\n              <td (click)=\\\"editarPedido(pedido)\\\">{{pedido.numeroPedido}}</td>\\r\\n              <td (click)=\\\"editarPedido(pedido)\\\">{{pedido.cliente.nombresCliente}}</td>\\r\\n              <td (click)=\\\"editarPedido(pedido)\\\">{{pedido.fechaCreacion | date: 'dd/MM/yyyy'}}</td>\\r\\n              <td (click)=\\\"editarPedido(pedido)\\\">{{pedido.fechaEntrega | date: 'dd/MM/yyyy'}}</td>\\r\\n              <td (click)=\\\"editarPedido(pedido)\\\">${{pedido.total}}</td>\\r\\n              <td (click)=\\\"editarPedido(pedido)\\\">{{pedido.idEstado}}</td>\\r\\n              <td>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\"\\r\\n                (click)=\\\"addTallas(pedido); $event.stopPropagation();\\\">Tallas</button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\"\\r\\n                (click)=\\\"$event.stopPropagation();\\\">Ficha tecnica</button>\\r\\n<!--BORRAR PEDIDO-->\\r\\n                <button type=\\\"button\\\" (click)='eliminaPedido(pedido);$event.stopPropagation();'>\\r\\n                  <i class=\\\"icofont icofont-trash\\\"></i>\\r\\n                </button>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n    </app-card>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/tomas/Documents/workspace-sts-3.9.1.RELEASE/delta-sport-angular-front/src/app/pages/pedidos/pedidos.component.html\n// module id = ../../../../../src/app/pages/pedidos/pedidos.component.html\n// module chunks = pedidos.module","import { ActivatedRoute, Router } from '@angular/router';\r\nimport { PedidosService } from '../../services/pedidos.service';\r\nimport { Pedido } from '../../model/pedido/pedido.model';\r\n/* import { TipoProducto } from '../../model/producto/tipoProducto.model';\r\nimport { Producto } from '../../model/producto/producto.model';\r\n */import { Component, OnInit} from '@angular/core';\r\n import { Observable } from \"rxjs\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-pedidos',\r\n  templateUrl: './pedidos.component.html',\r\n  styleUrls: ['./pedidos.component.css']\r\n})\r\nexport class PedidosComponent implements OnInit {\r\n  listaPedidos: Pedido[];\r\n  listaEstadosPedido: any[];\r\n  pedido: Pedido;\r\n  verLista: boolean = true;\r\n  tipoForm: string; // USADO PARA DEFINIR LAS TALLAS\r\n  mensaje: string;\r\n  constructor(private route: ActivatedRoute,\r\n    private router: Router,\r\n    private pedidosService: PedidosService) {\r\n    let sub = this.route.params.subscribe(params => {\r\n      this.mensaje = params['id']; // (+) converts string 'id' to a number\r\n      //console.log('mensaje->'+ mensaje);\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.verLista = true;\r\n\r\n    //lista de pedidos\r\n    this.pedidosService.getPedidos()\r\n      .subscribe(\r\n        pedidos => this.listaPedidos = pedidos,\r\n        err => console.log(err)\r\n    );\r\n    this.listaEstadosPedido = this.pedidosService.getEstadosPedido();\r\n  }\r\n\r\n  //Cierre con boton Volver\r\n  public volver() {\r\n    //this.verForm = false;\r\n    this.toggleLista();\r\n  }\r\n  public toggleLista(){\r\n    this.verLista = !this.verLista;\r\n    console.log('this.verLista ->'+ this.verLista);\r\n  }\r\n\r\n  //Ver o Editar Cliente\r\n  editarPedido(pedido: Pedido) {\r\n    this.router.navigate(['/pedidos/formPedido/editar/', pedido.numeroPedido]);\r\n  }\r\n\r\n  eliminaPedido(pedido: Pedido){\r\n    console.log('Elimina Pedido..');\r\n    //Cambia el estado del pedido\r\n    pedido.idEstado=0;\r\n    this.pedidosService.putPedido(pedido).subscribe(data => {\r\n      console.log('pedido eliminado->' + JSON.stringify(data));\r\n      this.pedido = data;\r\n    });\r\n  }\r\n  addTallas(pedido: Pedido){\r\n    console.log('editando tallas...');\r\n    this.router.navigate(['/pedidos/formPedido/tallas/', pedido.numeroPedido]);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/tomas/Documents/workspace-sts-3.9.1.RELEASE/delta-sport-angular-front/src/app/pages/pedidos/pedidos.component.ts","import { ClientesService } from '../../services/clientes.service';\r\nimport { PedidosService } from '../../services/pedidos.service';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { HttpModule } from '@angular/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { pedidosRouter } from './pedidos.router';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PedidosComponent } from './pedidos.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormPedidoComponent } from './form-pedido/form-pedido.component';\r\nimport { FormPedidoModule } from './form-pedido/form-pedido.module';\r\n\r\nexport const pedidosRoutes: Routes = [\r\n  {path: '', component: PedidosComponent},\r\n  {path: 'formPedido/:tipoForm', component: FormPedidoComponent},\r\n  {path: 'formPedido/:tipoForm/:id', component: FormPedidoComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    pedidosRouter,\r\n    RouterModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    SharedModule,\r\n    FormPedidoModule,\r\n    RouterModule.forChild(pedidosRoutes),\r\n  ],\r\n  providers: [\r\n    PedidosService,\r\n    ClientesService\r\n  ],\r\n  declarations: [PedidosComponent, FormPedidoComponent]\r\n})\r\nexport class PedidosModule {}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/tomas/Documents/workspace-sts-3.9.1.RELEASE/delta-sport-angular-front/src/app/pages/pedidos/pedidos.module.ts","import { PedidosComponent } from './pedidos.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n/* import { SharedModule } from '../../shared/shared.module';\r\nimport { FormPedidoComponent } from './form-pedido/form-pedido.component';\r\n */\r\nconst PEDIDOS_ROUTER: Routes = [\r\n  {path: '', component: PedidosComponent},\r\n];\r\n\r\nexport const pedidosRouter = RouterModule.forChild(PEDIDOS_ROUTER);\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/tomas/Documents/workspace-sts-3.9.1.RELEASE/delta-sport-angular-front/src/app/pages/pedidos/pedidos.router.ts"],"sourceRoot":"webpack:///"}